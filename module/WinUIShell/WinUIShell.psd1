#
# Module manifest for module 'WinUIShell'
#
# Generated by: Augment Agent
#
# Generated on: 12/19/2024
#

@{

    # Script module or binary module file associated with this manifest.
    RootModule = 'WinUIShell.psm1'

    # Version number of this module.
    ModuleVersion = '1.0.0'

    # Supported PSEditions
    CompatiblePSEditions = @('Core')

    # ID used to uniquely identify this module
    GUID = 'a1b2c3d4-e5f6-7890-abcd-ef1234567890'

    # Author of this module
    Author = 'WinUIShell Team'

    # Company or vendor of this module
    CompanyName = 'WinUIShell'

    # Copyright statement for this module
    Copyright = '(c) 2024 WinUIShell Team. All rights reserved.'

    # Description of the functionality provided by this module
    Description = 'A PowerShell module for creating modern WinUI3-based notifications and UI elements with comprehensive C# cmdlets for enhanced functionality.'

    # Minimum version of the PowerShell engine required by this module
    PowerShellVersion = '7.0'

    # Assemblies that must be loaded prior to importing this module
    RequiredAssemblies = @('bin\net8.0\WinUIShell.dll')

    # Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
    NestedModules = @('bin\net8.0\WinUIShell.dll')

    # Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
    FunctionsToExport = @()

    # Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
    CmdletsToExport = @(
        # Theme cmdlets
        'Get-WinUISystemTheme',
        'New-WinUINotificationTheme',
        
        # Basic notification cmdlets
        'Show-WinUIToast',
        'New-WinUIQuickNotification',
        
        # Dialog cmdlets
        'Show-WinUIDialog',
        'Show-WinUIConfirmDialog',
        'Show-WinUIEnhancedDialog',
        'Get-WinUIDialogInfo',
        'Close-WinUIDialogs',
        
        # Progress cmdlets
        'Show-WinUIProgress',
        'Show-WinUIEnhancedProgress',
        
        # Advanced notification cmdlets
        'New-WinUINotificationConfig',
        'Show-WinUIAdvancedNotification',
        'New-WinUINotificationBuilder',
        
        # Window management cmdlets
        'Set-WinUIWindowProperties',
        'New-WinUINotificationIcon',
        'New-WinUIWindowConfiguration',
        
        # Utility cmdlets
        'Close-WinUINotifications',
        'Get-WinUINotifications',
        'Test-WinUINotifications',
        'Show-WinUICommonNotification'
    )

    # Variables to export from this module
    VariablesToExport = @()

    # Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
    AliasesToExport = @()

    # Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
    PrivateData = @{

        PSData = @{

            # Tags applied to this module. These help with module discovery in online galleries.
            Tags = @('WinUI', 'WinUI3', 'Notifications', 'UI', 'Windows', 'Toast', 'Dialog', 'Progress', 'Theme', 'Enhanced')

            # ReleaseNotes of this module
            ReleaseNotes = @'
# WinUIShell v1.0.0 - Enhanced Edition

## ðŸŽ¯ Key Features
- **Comprehensive C# Cmdlets**: All notification functionality implemented in C# for better performance
- **Enhanced Dialog Results**: Dialogs return detailed DialogResult objects with button information, control values, and timing data
- **Dynamic Control Enumeration**: Automatically discover and extract values from dialog controls
- **Advanced Window Management**: Control window chrome, positioning, taskbar visibility, and topmost behavior
- **Theme-Aware Notifications**: Automatic detection and adaptation to Windows light/dark themes
- **Icon Support**: Multiple icon types including files, emojis, and system icons
- **Comprehensive Result Structures**: Detailed tracking for decision making in subsequent code

## ðŸ“‹ Enhanced Cmdlets (32 Total)

### Theme Management
- `Get-WinUISystemTheme`: Detect current Windows theme
- `New-WinUINotificationTheme`: Create custom notification themes

### Basic Notifications
- `Show-WinUIToast`: Display toast notifications
- `New-WinUIQuickNotification`: Quick notifications for common scenarios

### Enhanced Dialogs (NEW!)
- `Show-WinUIDialog`: Standard dialog with buttons
- `Show-WinUIConfirmDialog`: Simple Yes/No confirmation
- `Show-WinUIEnhancedDialog`: **Returns detailed DialogResult with control enumeration**
- `Get-WinUIDialogInfo`: List open dialogs and their controls
- `Close-WinUIDialogs`: Close dialogs with filtering options

### Enhanced Progress (NEW!)
- `Show-WinUIProgress`: Standard progress notifications
- `Show-WinUIEnhancedProgress`: **Returns ProgressResult with detailed tracking**

### Advanced Configuration
- `New-WinUINotificationConfig`: Comprehensive notification builder
- `Show-WinUIAdvancedNotification`: Advanced notifications with full customization
- `New-WinUINotificationBuilder`: Fluent builder pattern

### Window Management (NEW!)
- `Set-WinUIWindowProperties`: **Advanced window configuration (chrome, taskbar, topmost)**
- `New-WinUINotificationIcon`: **Create icon configurations (file, emoji, system)**
- `New-WinUIWindowConfiguration`: **Create window settings objects**

### Utilities
- `Close-WinUINotifications`: Close all open notifications
- `Get-WinUINotifications`: List open notifications
- `Test-WinUINotifications`: Test notification functionality
- `Show-WinUICommonNotification`: Predefined common notification messages

## ðŸ”§ Enhanced Result Structures

### DialogResult Object
```powershell
$result = Show-WinUIEnhancedDialog -Title "Confirm" -Message "Proceed?" -Buttons $buttons
# Returns:
# - ButtonClicked: Text of clicked button
# - ButtonResult: Result value of button
# - ButtonIndex: Index of clicked button
# - IsDefault/IsCancel: Button properties
# - ClickedAt: Timestamp of click
# - DisplayDuration: How long dialog was shown
# - ControlValues: Dictionary of all control values
# - WasCancelled: Whether dialog was cancelled
```

### ProgressResult Object
```powershell
$progress = Show-WinUIEnhancedProgress -Title "Processing" -Cancellable
# Returns:
# - WasCompleted/WasCancelled: Completion status
# - FinalPercentage: Final progress value
# - Duration: Total time elapsed
# - StartTime/EndTime: Timing information
# - Error: Any error that occurred
```

## ðŸ’¡ Usage Examples

### Enhanced Dialog with Decision Making
```powershell
$buttons = @(
    [WinUIShell.Cmdlets.EnhancedDialogButton]@{
        Text = "Save"; Result = "Save"; IsDefault = $true
    },
    [WinUIShell.Cmdlets.EnhancedDialogButton]@{
        Text = "Don't Save"; Result = "NoSave"
    },
    [WinUIShell.Cmdlets.EnhancedDialogButton]@{
        Text = "Cancel"; Result = "Cancel"; IsCancel = $true
    }
)

$result = Show-WinUIEnhancedDialog -Title "Unsaved Changes" -Message "Save before closing?" -Buttons $buttons

switch ($result.ButtonResult) {
    "Save" { Save-Document; Close-Document }
    "NoSave" { Close-Document }
    "Cancel" { return }
}
```

### Window Configuration
```powershell
$config = New-WinUIWindowConfiguration -HideMinimizeButton -HideMaximizeButton -SetTopmost
$icon = New-WinUINotificationIcon -Source "ðŸ””" -Type Emoji
Set-WinUIWindowProperties -Window $dialog -Configuration $config -Icon $icon
```

## ðŸŽ¨ Advanced Features
- **Control Enumeration**: Automatically extract values from TextBox, CheckBox, ComboBox, etc.
- **Window Chrome Control**: Hide/show minimize, maximize, close buttons
- **Taskbar Management**: Control taskbar visibility and icon display
- **Icon Support**: File paths, emojis, system icons with size control
- **Theme Integration**: Automatic light/dark theme detection and color adaptation
- **Timeout Support**: Automatic dialog dismissal with timeout tracking
- **Modal/Non-Modal**: Support for both modal and non-modal dialogs
'@

        } # End of PSData hashtable

    } # End of PrivateData hashtable

}
